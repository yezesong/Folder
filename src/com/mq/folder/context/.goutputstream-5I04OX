package com.mq.folder.context;

import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import android.annotation.SuppressLint;
import android.app.Activity;
import android.app.Dialog;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.IntentFilter;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.content.pm.PackageManager.NameNotFoundException;
import android.content.res.AssetManager;
import android.graphics.BitmapFactory;
import android.graphics.Color;
import android.graphics.drawable.AnimationDrawable;
import android.net.Uri;
import android.os.Bundle;
import android.os.Handler;
import android.preference.PreferenceManager;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.MotionEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.View.OnTouchListener;
import android.view.ViewGroup;
import android.view.animation.AnimationUtils;
import android.widget.GridView;
import android.widget.HorizontalScrollView;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.RelativeLayout.LayoutParams;
import android.widget.SlidingDrawer;
import android.widget.SlidingDrawer.OnDrawerCloseListener;
import android.widget.SlidingDrawer.OnDrawerOpenListener;
import android.widget.TextView;
import android.widget.Toast;

import com.joy.network.RecommendShortcutInfo;
import com.joy.network.handler.RecommendListHandler;
import com.joy.network.impl.Service;
import com.joy.network.util.AsyncTask;
import com.joy.network.util.AsyncTask.CallBack;
import com.mq.folder_game_hub.R;
import com.mq.folder.adapter.FolderGridViewAdapter;
import com.mq.folder.common.Constants;
import com.mq.folder.common.cache.BitmapCaches;
import com.mq.folder.common.entity.AppInfo;
import com.mq.folder.common.utils.UnitUtils;
import com.mq.folder.common.utils.Util;
import com.mq.folder.common.view.AlertDialog;
import com.mq.folder.common.view.AppListDialog;
import com.mq.folder.common.view.RecommendButton;
import com.mq.folder.download.DownLoadDBHelper;
import com.mq.folder.download.DownloadInfo;
import com.mq.folder.download.DownloadManager;

@SuppressWarnings("deprecation")
public class MainActivity extends Activity implements OnClickListener {
	private ImageView imgHandle;

	private ImageView mRefresh, notifyLeft, notifyRight;

	private LinearLayout linearRecommend;
	private RelativeLayout relativeGuide;

	private HorizontalScrollView scrollView;

	private SlidingDrawer sd;

	private GridView gridView;

	private SharedPreferences sp;

	private final static String FOLDER_APP_LIST = "folder_app_list";

	private Context context;

	private final static String TAG = "folderMain";

	public UnitUtils unit;
	private boolean isCacheInfo;
	private final static String KEY_HAS_OPEN = "has_open";
	private AssetManager assertManager;
	private String[] imgList;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.onlinefolder_layout);
		context = this;
		assertManager = getResources().getAssets();
		try {
			imgList = assertManager.list("img");
			Log.e(TAG, "imgList.toString: " + Arrays.toString(imgList));
		} catch (IOException e) {
			e.printStackTrace();
		}
		initView();
		initFolderApp();
		if (Util.isNetworkConnected(context)) {
			sd.animateOpen();
			getRecommendApkListFirstTime();
		} else {
			Toast.makeText(getApplicationContext(), getResources().getText(R.string.uu_download_no_networking_text),
					Toast.LENGTH_SHORT).show();
		}
		IntentFilter filter = new IntentFilter(Intent.ACTION_PACKAGE_REMOVED);
		filter.addDataScheme("package");
		registerReceiver(myReceiver, filter);
		if (sp == null)
			sp = PreferenceManager.getDefaultSharedPreferences(context);
		if (!sp.getBoolean(KEY_HAS_OPEN, false)) {
			relativeGuide.setVisibility(View.VISIBLE);
			notifyLeft.startAnimation(AnimationUtils.loadAnimation(context, R.anim.notify_left));
			notifyRight.startAnimation(AnimationUtils.loadAnimation(context, R.anim.notify_right));
			for (String str : Constants.APPS) {
				folderAppAdd(str);
			}
		}
		List<RecommendShortcutInfo> apps = readShortcutInfo();
		// 